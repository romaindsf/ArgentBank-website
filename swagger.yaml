swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
       - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account:
    get:
      security:
        - Bearer: []
      tags:
      - User Profile
      summary: User Account API
      description: API for fetching a user accounts and transactions
      produces:
      - "application/json"
      responses:
        '200':
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponseGetAccount"
        '400':
          description: "Request is malformed or invalid"
        '401':
          description: "User is not authenticated to access the resource"
        '404':
          description: "Requested resource could not be found"
        '500':
          description: "Unexpected error occurred on the server"
        '503':
          description: "Server is temporarily unavailable"
  /user/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
      - User Profile
      summary: User Transaction ID API
      description: "API for fetching a transaction informations"
      produces:
      - "application/json"
      parameters:
      - name: "transactionID"
        in: "path"
        description: "Id de la transaction"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionDetails"
        400:
          description: "Request is malformed or invalid"
        401:
          description: "User is not authenticated to access the resource"
        404:
          description: "Requested resource could not be found"
        500:
          description: "Unexpected error occurred on the server"
        503:
          description: "Server is temporarily unavailable"
    put:
      security:
        - Bearer: []
      tags:
      - User Profile
      summary: User Transaction ID API
      description: "API for modifying a transaction informations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionID"
        in: "path"
        description: "Id de la transaction"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Information(s) to change about a transaction"
        required: true
        schema:
          $ref: "#/definitions/TransactionDetails"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransactionDetails"
        400:
          description: "Request is malformed or invalid"
        401:
          description: "User is not authenticated to access the resource"
        404:
          description: "Requested resource could not be found"
        500:
          description: "Unexpected error occurred on the server"
        503:
          description: "Server is temporarily unavailable"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
        format: "int64"
  Transactions:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      date:
        type: "string"
      description:
        type: "string"
      amount:
        type: "string"
      balance:
        type: "string"
  ApiResponseGetAccount:
    type: "object"
    properties:
      status:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      body:
        type: "object"
        properties:
          account:
            type: "array"
            items: 
              $ref: "#/definitions/Account"
            
          transactions:
            type: "array"
            items: 
              $ref: "#/definitions/Transactions"
            
  TransactionDetails:
    type: "object"
    properties:
      transaction_type:
        type: "string"
      category:
        type: "string"
      note:
        type: "string"
